pb$tick()
marginal_uplifts <- items |>
dplyr::rowwise() |>
dplyr::mutate(marginal_uplift = test_increment(schedule, campaign_index, media_index, date_index, step))
}
}
test2 <- optimise_schedule(test, 1000, 100)
devtools::load_all(".")
devtools::load_all(".")
which(c(2,3,3)==max(c(2,3,3)))
devtools::load_all(".")
test <- schedule_demo()
View(test)
View(test[[6]][[1]])
View(test[[7]][[1]])
View((test[[7]][[1]])[[4]][[1]])
View(((test[[7]][[1]])[[4]][[1]])[[8]][[1]])
View(test[[7]][[1]])
View((test[[7]][[1]])[[4]][[2]])
View(((test[[7]][[1]])[[4]][[2]])[[8]][[1]])
devtools::load_all(".")
test <- schedule_demo()
View(test)
View(test)
View(test[[6]][[1]])
View(test[[7]][[1]])
View((test[[7]][[1]])[[4]][[1]])
View(((test[[7]][[1]])[[4]][[1]])[[8]][[1]])
View(test[[6]][[1]])
View(test[[7]][[1]])
View((test[[7]][[1]])[[4]][[1]])
View(((test[[7]][[1]])[[4]][[1]])[[8]][[1]])
View(test)
View(test[[6]][[1]])
View(test[[7]][[1]])
View((test[[7]][[1]])[[4]][[1]])
View(((test[[7]][[1]])[[4]][[1]])[[8]][[1]])
remotes::install_github('neilcharles/optimR')
remotes::install_github('neilcharles/optimR')
remotes::install_github('neilcharles/optimR')
usethis::edit_r_environ()
remotes::install_github('neilcharles/optimR')
test <- optimR::schedule_demo()
View(test)
View(test[[6]][[1]])
View(test[[7]][[1]])
View((test[[7]][[1]])[[4]][[1]])
View(((test[[7]][[1]])[[4]][[1]])[[8]][[1]])
remotes::install_github('neilcharles/optimR')
source("~/dev/optimR/R/media_mix_navigator_scraper.R", echo=TRUE)
usethis::use_vignette()
usethis::use_vignette('Media Mix Navigator')
usethis::use_vignette('media_mix_navigator')
usethis::use_vignette('basic_optimisation')
devtools::load_all(".")
schedule <- schedule_demo()
laydown <- schedule |>
optimise_schedule(max_budget = 3000000, step = 100000)
laydown <- schedule |>
optimise_schedule(max_budget = 1000000, step = 100000)
laydown
laydown |>
unnest_schedule()
devtools::load_all(".")
selenium_docker_string()
library(optimR)
selenium_docker_string()
schedule <- schedule_demo()
laydown <- schedule |>
optimise_schedule(max_budget = 1000000, step = 100000)
laydown |>
unnest_schedule()
remotes::install_github('neilcharles/optimR')
remotes::install_github('neilcharles/optimR')
remotes::install_github('neilcharles/optimR', build_vignettes = TRUE)
remotes::install_github('neilcharles/optimR', build_vignettes = TRUE, force = TRUE)
devtools::load_all(".")
laydown <- schedule_demo() |>
optimise_schedule(max_budget = 1000000, step = 100000)
remotes::install_github('neilcharles/optimR', build_vignettes = TRUE, force = TRUE)
remotes::install_github('neilcharles/optimR', build_vignettes = TRUE, force = TRUE)
remotes::install_github('neilcharles/optimR', build_vignettes = TRUE, force = TRUE)
remotes::install_github('neilcharles/optimR', build_vignettes = TRUE, force = TRUE)
remotes::install_github('neilcharles/optimR', build_vignettes = TRUE, force = TRUE)
vignette("media_mix_navigator", package = "optimR")
devtools::load_all(".")
schedule <- schedule_demo()
View(schedule)
install.packages("mapview")
mapview(brewerie)
mapview(breweries)
library(mapview)
mapview(breweries)
shiny_maintain_schedule <- function(...) {
ui <- shiny::fluidPage(
titlePanel("Maintenance"),
mainPanel(
plotOutput("distPlot")
)
)
server <- function(input, output, session) {
output$distPlot <- renderPlot({
x    <- faithful[, 2]
bins <- seq(min(x), max(x), length.out = input$bins + 1)
hist(x, breaks = bins, col = 'darkgray', border = 'white',
xlab = 'Waiting time to next eruption (in mins)',
main = 'Histogram of waiting times')
})
}
# Run the application
shinyApp(ui = ui, server = server, launch.browser = rstudioapi::viewer)
}
shiny_maintain_schedule()
shiny_maintain_schedule <- function(...) {
ui <- shiny::fluidPage(
titlePanel("Maintenance"),
shiny::mainPanel(
shiny::p("Test")
)
)
server <- function(input, output, session) {
}
# Run the application
shinyApp(ui = ui, server = server, launch.browser = rstudioapi::viewer)
}
shiny_maintain_schedule()
shiny_maintain_schedule <- function(...) {
ui <- shiny::fluidPage(
shiny::titlePanel("Maintenance"),
shiny::mainPanel(
shiny::p("Test")
)
)
server <- function(input, output, session) {
}
# Run the application
shinyApp(ui = ui, server = server, launch.browser = rstudioapi::viewer)
}
shiny_maintain_schedule()
shiny_maintain_schedule <- function(...) {
ui <- shiny::fluidPage(
shiny::titlePanel("Maintenance"),
shiny::mainPanel(
shiny::p("Test")
)
)
server <- function(input, output, session) {
}
# Run the application
shiny::shinyApp(ui = ui, server = server, launch.browser = rstudioapi::viewer)
}
shiny_maintain_schedule()
shiny_maintain_schedule <- function(...) {
ui <- shiny::fluidPage(
shiny::titlePanel("Maintenance"),
shiny::mainPanel(
shiny::p("Test")
)
)
server <- function(input, output, session) {
}
# Run the application
shiny::shinyApp(ui = ui, server = server, launch.browser = rstudioapi::viewer)
}
shiny::runApp()
shiny::runApp("R/shiny_maintain_schedule", launch.browser = rstudioapi::viewer)
shiny::runApp("R/shiny_maintain_schedule", launch.browser = rstudioapi::viewer)
install.packages("rhandsontable")
devtools::load_all(".")
test <- schedule_demo()
maintain_schedule_interactive(test)
devtools::load_all(".")
maintain_schedule_interactive(test)
test2 <- test |> unnest_schedule()
View(test2)
View(test2[[6]][[1]])
View(test)
View(test)
devtools::load_all(".")
maintain_schedule_interactive(test)
devtools::load_all(".")
maintain_schedule_interactive(test)
View(test)
View(test[[7]][[1]])
install.packages("timevis")
View(test[[7]][[1]])
schedule_demo()
schedule_demo()$campaign_items
schedule_demo()$campaign_items[[1]]
schedule_demo()$campaign_items[[1]]$media_items[[1]]
schedule_demo()$campaign_items[[1]]$media_items[[1]] |>
tidyr::unnest(budget)
schedule_demo()$campaign_items[[1]]
tibble(
campaign = c("campaign1", "campaign1"),
media = c("TV", "Radio"),
start = c("2024-01-01", "2024-02-15"),
end = c("2024-03-31", "2024-03-31")
) |>
timevis::timevis()
tibble::tibble(
campaign = c("campaign1", "campaign1"),
media = c("TV", "Radio"),
start = c("2024-01-01", "2024-02-15"),
end = c("2024-03-31", "2024-03-31")
) |>
timevis::timevis()
tibble::tibble(
campaign = c("campaign1", "campaign1"),
media = c("TV", "Radio"),
start = c("2024-01-01", "2024-02-15"),
end = c("2024-03-31", "2024-03-31")
) |>
dplyr::mutate(content = media) |>
timevis::timevis()
tibble::tibble(
campaign = c("campaign1", "campaign1"),
media = c("TV", "Radio"),
start = c("2024-01-01", "2024-02-15"),
end = c("2024-03-31", "2024-03-31")
) |>
dplyr::mutate(content = media) |>
timevis::timevis(editable = TRUE)
tibble::tibble(
campaign = c("campaign1", "campaign1"),
media = c("TV", "Radio"),
start = c("2024-01-01", "2024-02-15"),
end = c("2024-03-31", "2024-03-31"),
editable = c(TRUE, TRUE)
) |>
dplyr::mutate(content = media) |>
timevis::timevis(editable = TRUE)
tibble::tibble(
campaign = c("campaign1", "campaign1"),
media = c("TV", "Radio"),
start = c("2024-01-01", "2024-02-15"),
end = c("2024-03-31", "2024-03-31"),
editable = c(TRUE, TRUE)
) |>
dplyr::mutate(content = media) |>
timevis::timevis()
tibble::tibble(
campaign = c("campaign1", "campaign1"),
media = c("TV", "Radio"),
start = c("2024-01-01", "2024-02-15"),
end = c("2024-03-31", "2024-03-31"),
editable = c(TRUE, TRUE)
) |>
dplyr::mutate(content = media) |>
timevis::timevis()
tibble::tibble(
campaign = c("campaign1", "campaign1"),
media = c("TV", "Radio"),
start = c("2024-01-01", "2024-02-15"),
end = c("2024-03-31", "2024-03-31"),
editable = c(TRUE, TRUE)
) |>
dplyr::mutate(content = media) |>
timevis::timevis()
tibble::tibble(
campaign = c("campaign1", "campaign1"),
media = c("TV", "Radio"),
start = c("2024-01-01", "2024-02-15"),
end = c("2024-03-31", "2024-03-31")
) |>
dplyr::mutate(content = media) |>
timevis::timevis() |>
timevis::setOptions(list(editable = TRUE))
tibble::tibble(
campaign = c("campaign1", "campaign1"),
media = c("TV", "Radio"),
start = c("2024-01-01", "2024-02-15"),
end = c("2024-03-31", "2024-03-31")
) |>
dplyr::mutate(content = media) |>
timevis::timevis() |>
timevis::setOptions(list(editable = TRUE))
tibble::tibble(
campaign = c("campaign1", "campaign1"),
media = c("TV", "Radio"),
start = c("2024-01-01", "2024-02-15"),
end = c("2024-03-31", "2024-03-31"),
) |>
dplyr::mutate(content = media,
editable = TRUE) |>
timevis::timevis() |>
timevis::setOptions(list(editable = TRUE))
tibble::tibble(
campaign = c("campaign1", "campaign1"),
media = c("TV", "Radio"),
start = c("2024-01-01", "2024-02-15"),
end = c("2024-03-31", "2024-03-31"),
) |>
dplyr::mutate(content = media,
editable = TRUE) |>
timevis::timevis() |>
timevis::setOptions(list(editable = TRUE))
devtools::load_all(".")
test <- schedule_demo()
devtools::load_all(".")
test <- schedule_demo()
warnings()
devtools::load_all(".")
usethis::edit_r_environ()
schedule_demo()$campaign_items[[1]]$media_items[[1]] |>
tidyr::unnest(budget) |>
group_by(media_name) |>
summarise(start)
schedule_demo()$campaign_items[[1]]$media_items[[1]] |>
tidyr::unnest(budget) |>
dplyr::group_by(media_name) |>
dplyr::summarise(start)
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
schedule_demo()$campaign_items[[1]]$media_items[[1]] |>
tidyr::unnest(budget) |>
dplyr::group_by(media_name) |>
dplyr::summarise(start)
schedule_demo()$campaign_items[[1]]$media_items[[1]]
demo <- create_schedule("my plan", "2023-01-01", "2023-12-01") |>
add_campaign(campaign("my first campaign", "stuff"))
devtools::load_all(".")
demo <- create_schedule("my plan", "2023-01-01", "2023-12-01") |>
add_campaign(campaign("my first campaign", "stuff")) |>
add_media(1, media("TV", "TV", alpha = 10, beta = 50000, decay = 0.5))
View(demo)
View(demo[[6]][[1]])
View(demo[[7]][[1]])
View((demo[[7]][[1]])[[4]][[1]])
View(demo[[7]][[1]])
View((demo[[7]][[1]])[[4]][[1]])
devtools::load_all(".")
demo <- create_schedule("my plan", "2023-01-01", "2023-12-01") |>
add_campaign(campaign("my first campaign", "stuff")) |>
add_media(1, media("TV", "TV", alpha = 10, beta = 50000, decay = 0.5))
media <- tibble::tibble(
media_id = uuid::UUIDgenerate(),
media_name = name,
media_type = type,
weight_metric = weight_metric,
alpha = alpha,
beta = beta,
decay = decay,
start_date,
end_date,
spend,
cost_per,
weight,
laydown = list(
laydown()
)
)
name
name
type
devtools::load_all(".")
media(name = "test")
name
schedule_demo <- function() {
demo <- create_schedule("my plan", "2023-01-01", "2023-12-01") |>
add_campaign(campaign("my first campaign", "stuff")) |>
add_media(1, media("TV", "TV", alpha = 10, beta = 50000, decay = 0.5))
schedule_demo <- function() {
demo <- create_schedule("my plan", "2023-01-01", "2023-12-01") |>
add_campaign(campaign("my first campaign", "stuff")) |>
add_media(1, media("TV", "TV", alpha = 10, beta = 50000, decay = 0.5))
schedule_demo <- function() {
demo <- create_schedule("my plan", "2023-01-01", "2023-12-01") |>
add_campaign(campaign("my first campaign", "stuff")) |>
add_media(1, media("TV", "TV", alpha = 10, beta = 50000, decay = 0.5))
demo <- create_schedule("my plan", "2023-01-01", "2023-12-01") |>
add_campaign(campaign("my first campaign", "stuff")) |>
add_media(1, media("TV", "TV", alpha = 10, beta = 50000, decay = 0.5))
name
devtools::load_all(".")
media(name = "TV")
name
type
media("TV", "TV", alpha = 10, beta = 50000, decay = 0.5)
name
devtools::load_all(".")
devtools::load_all(".")
demo <- create_schedule("my plan", "2023-01-01", "2023-12-01") |>
add_campaign(campaign("my first campaign", "stuff")) |>
add_media(1, media("TV", "TV", alpha = 10, beta = 50000, decay = 0.5))
media
media("TV", "TV", alpha = 10, beta = 50000, decay = 0.5)
media("TV", "TV", alpha = 10, beta = 50000, decay = 0.5)
media("TV", "TV", alpha = 10, beta = 50000, decay = 0.5)
media("TV", "TV", alpha = 10, beta = 50000, decay = 0.5)
numeric(NA)
character(1)
devtools::load_all(".")
demo <- create_schedule("my plan", "2023-01-01", "2023-12-01") |>
add_campaign(campaign("my first campaign", "stuff")) |>
add_media(1, media("TV", "TV", alpha = 10, beta = 50000, decay = 0.5))
demo <- create_schedule("my plan", "2023-01-01", "2023-12-01") |>
add_campaign(campaign("my first campaign", "stuff")) |>
add_media(1, media("TV", "TV", alpha = 10, beta = 50000, decay = 0.5))
date(1)
numeric(1)
devtools::load_all(".")
media("TV", "TV", alpha = 10, beta = 50000, decay = 0.5)
devtools::load_all(".")
media("TV", "TV", alpha = 10, beta = 50000, decay = 0.5)
devtools::load_all(".")
media("TV", "TV", alpha = 10, beta = 50000, decay = 0.5)
devtools::load_all(".")
media <- media("TV", "TV", alpha = 10, beta = 50000, decay = 0.5)
schedule <- create_schedule("my plan", "2023-01-01", "2023-12-01") |>
add_campaign(campaign("my first campaign", "stuff"))
date_range <- seq.Date(as.Date(media$start_date), as.Date(media$end_date), schedule$granularity)
date_range
rep(1/length(date_range), length(date_range))
date_range <- seq.Date(as.Date(media$start_date), as.Date(media$end_date), schedule$granularity)
date_range
devtools::load_all(".")
demo <- create_schedule("my plan", "2023-01-01", "2023-12-01") |>
add_campaign(campaign("my first campaign", "stuff")) |>
add_media(1, media("TV", "TV", alpha = 10, beta = 50000, decay = 0.5))
media("TV", "TV", alpha = 10, beta = 50000, decay = 0.5)
laydown(
date = date_range,
distribution = rep(1/length(date_range), length(date_range)),
spend = rep(0, length(date_range)),
weight = rep(0, length(date_range)),
weight_decayed = rep(0, length(date_range)),
uplift = rep(0, length(date_range)),
min_spend = rep(0, length(date_range)),
max_spend = rep(Inf, length(date_range)),
threshold_spend = rep(0, length(date_range))
)
devtools::load_all(".")
demo <- create_schedule("my plan", "2023-01-01", "2023-12-01") |>
add_campaign(campaign("my first campaign", "stuff")) |>
add_media(1, media("TV", "TV", alpha = 10, beta = 50000, decay = 0.5))
media("TV", "TV", alpha = 10, beta = 50000, decay = 0.5)
devtools::load_all(".")
demo <- create_schedule("my plan", "2023-01-01", "2023-12-01") |>
add_campaign(campaign("my first campaign", "stuff")) |>
add_media(1, media("TV", "TV", alpha = 10, beta = 50000, decay = 0.5))
devtools::load_all(".")
devtools::load_all(".")
demo <- create_schedule("my plan", "2023-01-01", "2023-12-01") |>
add_campaign(campaign("my first campaign", "stuff")) |>
add_media(1, media("TV", "TV", alpha = 10, beta = 50000, decay = 0.5))
devtools::load_all(".")
demo <- create_schedule("my plan", "2023-01-01", "2023-12-01") |>
add_campaign(campaign("my first campaign", "stuff")) |>
add_media(1, media("TV", "TV", alpha = 10, beta = 50000, decay = 0.5))
laydown()
date()
devtools::load_all(".")
demo <- create_schedule("my plan", "2023-01-01", "2023-12-01") |>
add_campaign(campaign("my first campaign", "stuff")) |>
add_media(1, media("TV", "TV", alpha = 10, beta = 50000, decay = 0.5))
devtools::load_all(".")
demo <- create_schedule("my plan", "2023-01-01", "2023-12-01") |>
add_campaign(campaign("my first campaign", "stuff")) |>
add_media(1, media("TV", "TV", alpha = 10, beta = 50000, decay = 0.5))
View(demo)
View(demo[[6]][[1]])
View(demo[[7]][[1]])
View((demo[[7]][[1]])[[4]][[2]])
View(((demo[[7]][[1]])[[4]][[2]])[[13]][[1]])
devtools::load_all(".")
test <- schedule_demo()
View(test)
View(test[[7]][[1]])
View((test[[7]][[1]])[[4]][[3]])
View(((test[[7]][[1]])[[4]][[3]])[[13]][[1]])
demo <- create_schedule("my plan", "2023-01-01", "2023-12-01")
View(demo)
View(demo[[7]][[1]])
devtools::load_all(".")
demo <- create_schedule("my plan", "2023-01-01", "2023-12-01")
View(demo)
demo <- create_schedule("my plan", "2023-01-01", "2023-12-01") |>
add_campaign(campaign("my first campaign", "stuff"))
devtools::load_all(".")
demo <- create_schedule("my plan", "2023-01-01", "2023-12-01")
View(demo)
View(demo[[7]][[1]])
demo <- create_schedule("my plan", "2023-01-01", "2023-12-01") |>
add_campaign(campaign("my first campaign", "stuff"))
View(demo)
View(demo[[7]][[1]])
View((demo[[7]][[1]])[[4]][[1]])
devtools::load_all(".")
demo <- create_schedule("my plan", "2023-01-01", "2023-12-01") |>
add_campaign(campaign("my first campaign", "stuff"))
View(demo)
View(demo[[7]][[1]])
View((demo[[7]][[1]])[[4]][[1]])
tibble::tibble(a = "a", b = numeric())
devtools::load_all(".")
demo <- create_schedule("my plan", "2023-01-01", "2023-12-01") |>
add_campaign(campaign("my first campaign", "stuff")) |>
add_media(1, media("TV", "TV", alpha = 10, beta = 50000, decay = 0.5))
View(demo)
View(demo[[7]][[1]])
View((demo[[7]][[1]])[[4]][[1]])
devtools::load_all(".")
demo <- create_schedule("my plan", "2023-01-01", "2023-12-01") |>
add_campaign(campaign("my first campaign", "stuff")) |>
add_media(1, media("TV", "TV", alpha = 10, beta = 50000, decay = 0.5))
View(demo)
View(demo[[7]][[1]])
View((demo[[7]][[1]])[[4]][[1]])
View(((demo[[7]][[1]])[[4]][[1]])[[13]][[1]])
usethis::edit_r_environ()
